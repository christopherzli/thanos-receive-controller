<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="66dcc214-2fdc-46fc-a9cc-cee852fa0814" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodyActiveAccount">
    <option name="activeAccountId" value="4754fb85-8963-4111-93cc-d9bb4731d294" />
  </component>
  <component name="GOROOT" url="file:///opt/homebrew/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitLabMergeRequestsSettings">{}</component>
  <component name="GithubPullRequestsUISettings">{}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file:///opt/homebrew/opt/go/libexec/src/testing/testing.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="KubernetesApiProvider">{
  &quot;contexts&quot;: [
    {
      &quot;name&quot;: &quot;docker-desktop&quot;
    }
  ],
  &quot;isMigrated&quot;: true
}</component>
  <component name="KubernetesSettings">
    <option name="contextName" value="docker-desktop" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2ai91mbkG2G1pY2i2b7xwwemah5" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Go Test.TestController in github.com/observatorium/thanos-receive-controller.executor": "Run",
    "Go Test.TestController/OneHashringOneStatefulSet in github.com/observatorium/thanos-receive-controller (1).executor": "Debug",
    "Go Test.TestController/OneHashringOneStatefulSet in github.com/observatorium/thanos-receive-controller (2).executor": "Run",
    "Go Test.TestController/OneHashringOneStatefulSet in github.com/observatorium/thanos-receive-controller.executor": "Debug",
    "Go Test.TestControllerWithAzAware in github.com/observatorium/thanos-receive-controller.executor": "Run",
    "Go Test.TestControllerWithAzAware/OneHashringLabelKeyManyStatefulSets in github.com/observatorium/thanos-receive-controller (2).executor": "Debug",
    "Go Test.TestControllerWithAzAware/OneHashringLabelKeyManyStatefulSets in github.com/observatorium/thanos-receive-controller.executor": "Run",
    "Go Test.TestControllerWithAzAware/OneHashringManyStatefulSets in github.com/observatorium/thanos-receive-controller.executor": "Run",
    "Go Test.TestControllerWithEndpointStruct in github.com/observatorium/thanos-receive-controller.executor": "Run",
    "Go Test.go test github.com/observatorium/thanos-receive-controller.executor": "Run",
    "Go Test.main_test.go.executor": "Run",
    "RunOnceActivity.CodyProjectSettingsMigration": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/christopher.li/thanos-receive-controller",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Go Test.TestControllerWithAzAware/OneHashringManyStatefulSets in github.com/observatorium/thanos-receive-controller">
    <configuration default="true" type="OPA_TEST_RUN_CONFIGURATION" factoryName="Opa configuration factory">
      <option name="additionalargs" value="" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="thanos-receive-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/observatorium/thanos-receive-controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestController in github.com/observatorium/thanos-receive-controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="thanos-receive-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/observatorium/thanos-receive-controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestController\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestControllerWithAzAware in github.com/observatorium/thanos-receive-controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="thanos-receive-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/observatorium/thanos-receive-controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestControllerWithAzAware\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestControllerWithAzAware/OneHashringManyStatefulSets in github.com/observatorium/thanos-receive-controller" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="thanos-receive-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/observatorium/thanos-receive-controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestControllerWithAzAware\E$/^\QOneHashringManyStatefulSets\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestController/OneHashringOneStatefulSet in github.com/observatorium/thanos-receive-controller (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="thanos-receive-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/observatorium/thanos-receive-controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestController\E$/^\QOneHashringOneStatefulSet\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestController/OneHashringOneStatefulSet in github.com/observatorium/thanos-receive-controller (2)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="thanos-receive-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/observatorium/thanos-receive-controller" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestController\E$/^\QOneHashringOneStatefulSet\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="thanos-receive-controller" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestControllerWithAzAware/OneHashringManyStatefulSets in github.com/observatorium/thanos-receive-controller" />
        <item itemvalue="Go Test.TestControllerWithAzAware in github.com/observatorium/thanos-receive-controller" />
        <item itemvalue="Go Test.TestController in github.com/observatorium/thanos-receive-controller" />
        <item itemvalue="Go Test.TestController/OneHashringOneStatefulSet in github.com/observatorium/thanos-receive-controller (2)" />
        <item itemvalue="Go Test.TestController/OneHashringOneStatefulSet in github.com/observatorium/thanos-receive-controller (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-b97fc8a1e17c-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.14494.238" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-GO-241.14494.238" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="66dcc214-2fdc-46fc-a9cc-cee852fa0814" name="Changes" comment="" />
      <created>1705986138957</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1705986138957</updated>
      <workItem from="1705986140060" duration="3652000" />
      <workItem from="1705996577948" duration="61000" />
      <workItem from="1705996797567" duration="23458000" />
      <workItem from="1706150897379" duration="2684000" />
      <workItem from="1706509510344" duration="1220000" />
      <workItem from="1706724384055" duration="2560000" />
      <workItem from="1707249055258" duration="1786000" />
      <workItem from="1710284541793" duration="8213000" />
      <workItem from="1711525116845" duration="8781000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>